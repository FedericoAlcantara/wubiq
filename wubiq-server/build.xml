<?xml version="1.0"?>

<project name="wubiq-server" basedir="." default="distribute">

	<property name="project" value="wubiq-server" />
	<property name="dist" value="${basedir}/dist" />
	<property name="src" value="${basedir}/src" />
	<property name="bin" value="${basedir}/bin" />
	<property name="web" value="${basedir}/WebContent" />
	<property name="lib" value="${web}/WEB-INF/lib" />
	<property name="output.war" value="${dist}/${project}.war" />
	<property name="war.build" value="${basedir}/build" />
	<property name="war.classes" value="${war.build}/WEB-INF/classes"/>
	<property name="workspace.dir" value="${basedir}/.." />
	<property name="basedir.gradle" value="${workspace.dir}/wubiq-android-gradle" />
	<property file="settings.properties" />

	<path id="project.classpath">
		<pathelement path="${lib}"/>
		<pathelement path="${bin}"/>
		<pathelement path="${war.build}"/>
		<fileset dir="${lib}"> 
			<include name="**/*.jar"/> 
		</fileset> 
	</path>
	
	<path id="project.src">
		<pathelement path="${src}"/>
	</path>
		
	<target name="create-version-properties" description="Creates build properties">
		<java classname="net.sf.wubiq.utils.VersionInfo" classpath="${war.classes}" outputproperty="build" />
		<property name="version" value="wubiq-${build}"/>
	</target>

	<target name="create-wubiq-server-output" description="creates war for wubiq-server">
		<!-- WAR creation -->
		<!-- clean and prepare the build directory for war creation --> 
		<antcall target="cleanForWar" />
		<!-- compile war into build --> 
		<antcall target="compileWar" />
		<!-- copy the required files -->
		<antcall target="copyForWar" />
		<!-- make the war -->
		<war jarfile="${output.war}">
			<fileset dir="${war.build}" />
		</war>
	</target>
	
	<target name="cleanForWar" description="Clean the directory for war creation">
		<delete dir="${dist}" failonerror="false" />
		<delete dir="${war.build}" failonerror="false" />
		<mkdir dir="${dist}"/>
		<mkdir dir="${war.build}"/>
		<mkdir dir="${war.classes}"/>
	</target>

	<target name="compileWar" description="Compiles classes into build dir">
		<!-- <ant antfile="../wubiq-common/build.xml" inheritall="false" /> -->
		<!-- <ant antfile="../wubiq-printerjob/build.xml" inheritall="false" /> -->
		<javac srcdir="${src}" destdir="${war.classes}" includeantruntime="false">
			<classpath refid="project.classpath" />
			<classpath location="../wubiq-common/dist/wubiq-common.jar" />
			<classpath location="../wubiq-common/lib-nondeploy/cglib-nodep-3.1.jar" />
			<classpath location="${basedir}/lib-nondeploy/servlet-api.jar" />
		</javac>
	</target>
	
	<target name="copyForWar" description="Copy the required classes for war creation">
		<copy todir="${war.build}">
			<fileset dir="${web}">
				<include name="**/*" />
				<exclude name="WEB-INF/lib/*" /> 
			</fileset>
		</copy>
		<copy todir="${war.build}/WEB-INF/lib">
			<fileset dir="${lib}">
				<include name="**/*.jar" />
			</fileset>
		</copy>
		<copy todir="${war.build}/WEB-INF/classes">		
			<fileset dir="${bin}">
				<include name="**/*" />
			</fileset>
		</copy>
		<delete file ="${war.build}/WEB-INF/classes/net/sf/wubiq/reports/TestPage-50.pdf" />
		<delete file ="${war.build}/WEB-INF/classes/net/sf/wubiq/reports/TestPage-50x2.pdf" />
	</target>
	
	<target name="deploy" description="deploys to server" if="deploy.dir">
		<copy todir="${deploy.dir}">
			<fileset dir="${basedir}/dist/${version}" includes="wubiq-common.jar" />
			<fileset dir="${basedir}/dist/${version}" includes="wubiq-installer.jar" />
		</copy>
	</target>

	<target name="create-javadoc-documentation" description="Creates javadoc documentation">
		<echo message="Creating wubiq-server javadoc" />
		<javadoc destdir="${basedir}/javadoc" sourcepath="${basedir}/src" packagenames="net.sf.wubiq.*"
				classpathref="project.classpath" failonerror="false" use="true" windowtitle="Wubiq Server Javadoc"
				doctitle="Wubiq Server API Documentation" />
	</target>

	<target name="create-all-javadoc-documentation" description="Creates javadoc documentation for all projects">
		<ant antfile="../wubiq-common/build.xml" inheritall="false" target="create-javadoc-documentation" />
		<ant antfile="../wubiq-client/build.xml" inheritall="false" target="create-javadoc-documentation" />
		<ant antfile="../wubiq-printerjob/build.xml" inheritall="false" target="create-javadoc-documentation" />
		<ant antfile="../wubiq-installer/build.xml" inheritall="false" target="create-javadoc-documentation" />
		<ant antfile="../wubiq-android-gradle/build.xml" inheritall="false" target="create-javadoc-documentation" />
		<antcall target="create-javadoc-documentation" />
	</target>

	<target name="distribuite-binaries" description="Distributes the binaries">
		<echo message="Distributing binaries" />
		<copy todir="${basedir}/dist/${version}" >
			<fileset dir="../wubiq-client/dist" includes="wubiq-client.jar" />
			<fileset dir="../wubiq-common/dist" includes="wubiq-common.jar" />
			<fileset dir="../wubiq-printerjob/dist" includes="wubiq-printerjob.jar" />
			<fileset dir="../wubiq-installer/dist">
				<include name="wubiq-setup.jar" />
				<include name="wubiq-installer.jar" />
			</fileset>
			<fileset dir="${basedir}/dist">
				<include name="wubiq-server.war" />
			</fileset>
			<fileset dir="${basedir}/lib-nondeploy" includes="hsqldb*.*" />
			<fileset dir="../wubiq-common">
				<include name="ChangeLog.txt" />
				<include name="README.rst" />
				<include name="terms_and_conditions.md" />
				<include name="privacy_policy.md" />
			</fileset>
			<fileset dir="../wubiq-android-gradle/app/release" includes="app-release.apk"/>
		</copy>
	</target>

	<target name="distribute-documentation" description="Distributes the javadoc documentation" depends="create-all-javadoc-documentation, create-version-properties">
		<echo message="Distributing javadoc documentation" />
		<delete dir="${basedir}/dist/${version}/javadoc" />
		<mkdir dir="${basedir}/dist/${version}/javadoc" />
		<copy todir="${basedir}/dist/${version}/javadoc/wubiq-common">
			<fileset dir="${basedir}/javadoc" />
		</copy>
		<copy todir="${basedir}/dist/${version}/javadoc/wubiq-installer">
			<fileset dir="${basedir}/javadoc" />
		</copy>
		<copy todir="${basedir}/dist/${version}/javadoc/wubiq-client">
			<fileset dir="${basedir}/javadoc" />
		</copy>
		<copy todir="${basedir}/dist/${version}/javadoc/wubiq-printerjob">
			<fileset dir="${basedir}/javadoc" />
		</copy>
		<copy todir="${basedir}/dist/${version}/javadoc/wubiq-server">
			<fileset dir="${basedir}/javadoc" />
		</copy>
		<copy todir="${basedir}/dist/${version}/javadoc/wubiq-android-gradle">
			<fileset dir="${workspace.dir}/wubiq-android-gradle/javadoc" />
		</copy>
	</target>

	<target name="distribute" description="creates the distribution" depends="create-version-properties">	
		<echo message="Starting distribution process for Wubiq" />

		<ant antfile="../wubiq-common/build.xml" inheritall="false" />
		<ant antfile="../wubiq-client/build.xml" inheritall="false" />
		<antcall target="create-wubiq-server-output" />
		
		<!-- Ask for generate the signed android application -->
		<input message="Common and client has been built and copied to ${basedir.gradle}/libs. Since the Wubiq-ANDROID is now on Android Studio, you MUST generate the signed android application and it's documentation from within the Android Studio NOW. Press Y to continue with the release process. (Y/N)?"
			validargs="y,n"
		    addproperty="do.continue" />
		<condition property="do.abort">
			<equals arg1="n" arg2="${do.continue}"/>
		</condition>
		<fail if="do.abort">Build android.apk to continue</fail>

		<ant antfile="../wubiq-installer/build.xml" inheritall="false" />
		<ant antfile="../wubiq-printerjob/build.xml" inheritall="false" />	
			
		<copy file="../wubiq-client/dist/wubiq-client.jar" todir="${basedir}/WebContent" />
		<copy file="../wubiq-installer/dist/wubiq-setup.jar" todir="${basedir}/WebContent" />

		<antcall target="distribuite-binaries" />

		<antcall target="distribute-documentation" />

		<move file="${basedir}/dist/${version}/app-release.apk" tofile="${basedir}/dist/${version}/wubiq-android.apk"/>
		<copy file="${basedir}/dist/${version}/wubiq-android.apk" todir="${basedir}/WebContent" />
		
		<zip basedir="${basedir}/dist/${version}" zipfile="${basedir}/dist/${version}.zip" />

		<antcall target="deploy" />
		
	</target>
</project>
